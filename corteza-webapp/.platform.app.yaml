name: webapp
type: nodejs:10
disk: 2048

dependencies:
    nodejs:
        yarn: "*"
        platformsh-config: "*"

hooks:
    build: |
        set -e

        wget https://github.com/stedolan/jq/releases/download/jq-1.6/jq-linux64 -O jq
        chmod +x jq

        yarn global add @vue/cli
        yarn install

        # Build the application for production
        yarn run build

        # mv dist webapp

        # Move the configuration file into place.
        # This file uses the Platform.sh Node.js Config Reader
        # to get the host addresses of the relationships defined below
        # mv public _public

        CORTEZA_APPS="admin auth compose messaging"

        mkdir service-repos

        for MICROAPP in $CORTEZA_APPS; do
            echo "\n#########################################"
            echo "# Building corteza-webapp-${MICROAPP}"
            echo "#########################################\n"

            git clone "https://github.com/cortezaproject/corteza-webapp-${MICROAPP}.git" service-repos/${MICROAPP}
            cd service-repos/${MICROAPP}
            yarn install --prefer-offline
            yarn build
            cd ${PLATFORM_APP_DIR}
            mv service-repos/${MICROAPP}/dist dist/${MICROAPP}
            rm -rf service-repos/${MICROAPP}
        done;

        rm -rf service-repos .cache/yarn


    deploy: |
        set -e

        cp -R dist/* webapp/

        PRIMARY_ROUTE=$(
            echo $PLATFORM_ROUTES | base64 -d | ${PLATFORM_APP_DIR}/jq -r \
            '. as $routes |
                keys | .[] |
                select($routes[.].primary) | .
            '
        )

        # Regular ${var:offset:length} expansion doesn't work here
        # because that is a bashism and the deploy hook uses dash

        BASE_ROUTE="${PRIMARY_ROUTE#https://}"
        BASE_ROUTE="${BASE_ROUTE%/}"

        echo "Creating config.js..."
        /bin/cat << EOF > webapp/config.js
        // Config generated at runtime
        window.SystemAPI = \`https://api.${BASE_ROUTE}/system\`
        window.MessagingAPI = \`https://api.${BASE_ROUTE}/messaging\`
        window.ComposeAPI = \`https://api.${BASE_ROUTE}/compose\`
        EOF

        cat webapp/config.js

        CORTEZA_APPS="admin auth compose messaging"

        for MICROAPP in $CORTEZA_APPS; do
            ln webapp/config.js "webapp/${MICROAPP}/config.js"
        done;

mounts:
    'webapp':
        source: local
        source_path: webapp

web:
    commands:
      start: sleep infinity
    upstream:
        socket_family: tcp
        protocol: http
    locations:
        "/messaging":
            root: "webapp/messaging"
            passthru: "/messaging/index.html"
            index: ['index.html']
            allow: false
            rules:
                \.(css|js|gif|jpe?g|png|ttf|eot|woff2?|otf|html|ico|svg?)$:
                    allow: true
        "/admin":
            root: "webapp/admin"
            passthru: "/admin/index.html"
            index: ['index.html']
            allow: false
            rules:
                \.(css|js|gif|jpe?g|png|ttf|eot|woff2?|otf|html|ico|svg?)$:
                    allow: true
        "/crm":
            root: "webapp/crm"
            passthru: "/index.html"
            index: ['index.html']
            allow: false
            rules:
                \.(css|js|gif|jpe?g|png|ttf|eot|woff2?|otf|html|ico|svg?)$:
                    allow: true
        "/compose":
            root: "webapp/compose"
            passthru: "/compose/index.html"
            index: ['index.html']
            allow: false
            rules:
                \.(css|js|gif|jpe?g|png|ttf|eot|woff2?|otf|html|ico|svg?)$:
                    allow: true
        "/auth":
            root: "webapp/auth"
            passthru: "/auth/index.html"
            index: ['index.html']
            allow: false
            rules:
                \.(css|js|gif|jpe?g|png|ttf|eot|woff2?|otf|html|ico|svg?)$:
                    allow: true
        "/":
            root: "webapp"
            index: ['index.html']
            expires: 300s
            scripts: true
            allow: false
            rules:
                \.(css|js|gif|jpe?g|png|ttf|eot|woff2?|otf|html|ico|svg?)$:
                    allow: true
                ^/robots\.txt$:
                    allow: true


relationships:
    systemapi: "server:http"
    messagingapi: "server:http"
    composeapi: "server:http"
